// Code generated by protok protocol buffer plugin, do not edit.
// Source file: language.proto
package api

import java.io.Serializable
import kotlin.Int
import kotlin.String
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic
import pbandk.Message

data class Language(override val value: Int, @JvmField val name: String) : Serializable,
        Message.Enum {
    override fun toString(): String = name
    companion object : Message.Enum.Companion<Language> {
        @JvmField
        val PROTOBUF: Language = Language(0, "PROTOBUF")

        @JvmField
        val KOTLIN: Language = Language(1, "KOTLIN")

        @JvmField
        val JAVA: Language = Language(2, "JAVA")

        @JvmField
        val SWIFT: Language = Language(3, "SWIFT")

        @JvmField
        val GO: Language = Language(4, "GO")

        @JvmStatic
        override fun fromValue(value: Int): Language = when(value) {
            0 -> PROTOBUF
            1 -> KOTLIN
            2 -> JAVA
            3 -> SWIFT
            4 -> GO
            else -> Language(value, "")
        }

        @JvmStatic
        fun fromName(name: String): Language = when(name) {
            "PROTOBUF" -> PROTOBUF
            "KOTLIN" -> KOTLIN
            "JAVA" -> JAVA
            "SWIFT" -> SWIFT
            "GO" -> GO
            else -> Language(-1, name)
        }
    }
}
